CREATE DATABASE COMPANY;

USE COMPANY;

CREATE TABLE EMPLOYEES (
    EMPLOYEEID INT(3) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRSTNAME VARCHAR(21) NOT NULL,
    LASTNAME VARCHAR(21),
    DEPARTMENTID INT(5) NOT NULL,
    SALARY INT(10) NOT NULL,
    HIREDATE DATE NOT NULL
);

USE COMPANY;

CREATE TABLE DEPARTMENTS (
    DEPARTMENTID INT(3) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    DEPARTMENTNAME VARCHAR(21) NOT NULL
);

USE COMPANY;

CREATE TABLE PROJECTS (
    PROJECTID INT(5) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PROJECTNAME VARCHAR(21) NOT NULL,
    DEPARTMENTID int(3),
    FOREIGN KEY (DEPARTMENTID) REFERENCES DEPARTMENTS(DEPARTMENTID)
);

USE COMPANY;

INSERT INTO EMPLOYEES (FIRSTNAME, LASTNAME, DEPARTMENTID, SALARY, HIREDATE) VALUES 
("JOHN", "SMITH", 1, 5000, "2020-01-15"),
("ALICE", "JOHNSON", 2, 6000, "2019-05-20"),
("MICHAEL", "WILLIAMS", 1, 5500, "2021-03-10"),
("EMILY", "BROWN", 2, 6200, "2020-11-28"),
("JAMES", "JONES", 3, 5800, "2018-09-03");

USE COMPANY;
SELECT * FROM EMPLOYEES;
USE COMPANY;
SELECT * FROM DEPARTMENTS;
USE COMPANY;
SELECT * FROM PROJECTS;

USE COMPANY;
SHOW TABLES;

USE COMPANY;
ALTER TABLE EMPLOYEES 
ADD FOREIGN KEY (DEPARTMENTID) REFERENCES DEPARTMENTS(DEPARTMENTID);

USE COMPANY;
SHOW CREATE TABLE EMPLOYEES;
SHOW CREATE TABLE DEPARTMENTS;

USE COMPANY;
SELECT * 
FROM information_schema.table_constraints
WHERE  table_schema = schema() --schema() -> return current active database
AND table_name = 'employees';

SHOW TABLE STATUS FROM COMPANY LIKE 'EMPLOYEES';

USE COMPANY;
INSERT INTO DEPARTMENTS VALUES
(1, "IT"),
(2, "HR"),
(3, "FINANCE");

USE COMPANY;
schema();

USE COMPANY;
INSERT INTO PROJECTS (PROJECTNAME, DEPARTMENTID) VALUES
("PROJECT A", 1),
("PROJECT B", 2),
("PROJECT C", 3);

USE COMPANY;
INSERT INTO PROJECTS (PROJECTNAME, DEPARTMENTID) VALUES
("PROJECT Ad", 4);

USE COMPANY;
SELECT * FROM EMPLOYEES
WHERE DEPARTMENTID = 
(SELECT DEPARTMENTID FROM DEPARTMENTS 
WHERE DEPARTMENTNAME = "IT");

USE COMPANY;
SELECT * FROM EMPLOYEES
ORDER BY HIREDATE;

USE COMPANY;
SELECT COUNT(*) FROM EMPLOYEES;

USE COMPANY;
SELECT SUM(SALARY) FROM EMPLOYEES;

-- A clause in SQL is a built-in function that 
-- helps to fetch the required records from a database table. 
-- A clause receives a conditional expression
-- e.g., where, having, and, or, order by, group by